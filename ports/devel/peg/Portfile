# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4
# $Id$

PortSystem      1.0
PortGroup       cmake 1.0

name            peg
categories      devel
version         0.1.12
revision        0
license         MIT
maintainers     openmaintainer

description     recursive-descent parser generators for C
long_description \
   peg and leg are tools for generating recursive-descent parsers: \
   programs that perform pattern matching on text. They processes a \
   Parsing Expression Grammar (PEG) \[Ford 2004\] to produce a program \
   that recognises legal sentences of that grammar.

homepage        http://piumarta.com/software/peg/
master_sites    ${homepage}

checksums \
    rmd160  55436e003eeec50d79f932a14dbbff9e3c7d4843 \
    sha256  76c8c1b9476d1dc113d6ecf190b3d035c547448c650dc43d633367d41a45aa00

post-extract {
    copy ${filespath}/CMakeLists.txt.in ${worksrcpath}/CMakeLists.txt
    reinplace "s|%VERSION%|${version}|g" ${worksrcpath}/CMakeLists.txt
    copy ${filespath}/src-CMakeLists.txt ${worksrcpath}/src/CMakeLists.txt
}

set docdestroot ${destroot}${prefix}/share/doc/${name}

post-destroot {
    xinstall -m 0755 -d ${docdestroot}/examples
    foreach f [glob ${worksrcpath}/examples/*] {
        file copy ${f} ${docdestroot}
    }
}

livecheck.type  regex
livecheck.url   ${homepage}
livecheck.regex {>peg-([0-9]+\.[0-9.]+)<}
