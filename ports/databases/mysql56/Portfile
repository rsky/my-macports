# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4
# $Id$

PortSystem          1.0

name                mysql56
set name_mysql      ${name}
version             5.6.11
# Please set revision_client and revision_server to 0 if you bump version.
set revision_client 0
set revision_server 0
categories          databases
platforms           darwin
license             GPL-2
maintainers         pixilla openmaintainer
homepage            http://www.mysql.com/

if {$subport == $name} {

    PortGroup           archcheck 1.0
    PortGroup           cmake 1.0
    PortGroup           select 1.0

    set version_branch  [join [lrange [split ${version} .] 0 1] .]

    revision            ${revision_client}
    license             GPL-2
    description         Multithreaded SQL database server
    long_description    MySQL is an open-source, multi-threaded SQL database with a command \
                        syntax very similar to mSQL.

    master_sites \
        http://cdn.mysql.com/Downloads/MySQL-${version_branch}/ \
        http://mysql.he.net/Downloads/MySQL-${version_branch}/ \
        http://mirrors.sunsite.dk/mysql/Downloads/MySQL-${version_branch}/ \
        http://sunsite.informatik.rwth-aachen.de/mysql/Downloads/MySQL-${version_branch}/ \
        http://mirror.facebook.net/mysql/Downloads/MySQL-${version_branch}/ \
        http://ftp.plusline.de/mysql/Downloads/MySQL-${version_branch}/ \
        http://mysql.mirrors.pair.com/Downloads/MySQL-${version_branch}/

    distname            mysql-${version}
    use_parallel_build  yes

    patch.pre_args      -p1
    patchfiles          patch-cmake-install_layout.cmake.diff

    checksums           rmd160  acd671ace63cab1ffc442dd7e3ffa10ff9fb4659 \
                        sha256  ea4a494ea926a20ada56b1c139afdc65f5a68827068a509cd0801640d8dd079e

    depends_lib-append  port:zlib port:tcp_wrappers port:openssl
    depends_run-append  port:mysql_select

    configure.compiler  llvm-gcc-4.2

    select.group        mysql
    select.file         ${filespath}/${name_mysql}

    archcheck.files     lib/libz.dylib lib/libwrap.dylib lib/libssl.dylib

    post-extract {
        file mkdir ${worksrcpath}/build_macports/macports
        copy ${filespath}/macports-default.cnf \
            ${filespath}/my.cnf \
            ${worksrcpath}/build_macports/macports/
    }

    post-patch {
        reinplace "s|@NAME@|${name_mysql}|g" \
            ${worksrcpath}/cmake/install_layout.cmake
        reinplace "s|@NAME@|${name_mysql}|g" \
            ${worksrcpath}/build_macports/macports/macports-default.cnf \
            ${worksrcpath}/build_macports/macports/my.cnf
        reinplace "s|@PREFIX@|${prefix}|g" \
            ${worksrcpath}/build_macports/macports/macports-default.cnf \
            ${worksrcpath}/build_macports/macports/my.cnf
    }

    configure.cmd       cmake ..
    configure.dir       ${worksrcpath}/build_macports
    build.dir           ${worksrcpath}/build_macports

    configure.args-delete \
                        -DCMAKE_INSTALL_NAME_DIR=${prefix}/lib
    configure.args-append \
                        -DCMAKE_INSTALL_NAME_DIR:STRING=${prefix}/lib/${name_mysql}/mysql \
                        -DINSTALL_LAYOUT:STRING=MACPORTS \
                        -DSYSCONFDIR:PATH=${prefix}/etc/${name_mysql} \
                        -DMYSQL_UNIX_ADDR:PATH=${prefix}/var/run/${name_mysql}/mysqld.sock \
                        -DMYSQL_DATADIR:PATH=${prefix}/var/db/${name_mysql} \
                        -DDEFAULT_CHARSET:STRING=utf8 \
                        -DDEFAULT_COLLATION:STRING=utf8_general_ci \
                        -DWITH_EMBEDDED_SERVER:BOOL=ON \
                        -DWITH_ZLIB:STRING=system \
                        -DWITH_UNIT_TESTS:BOOL=ON \
                        -DENABLE_GCOV:BOOL=OFF \
                        -DENABLE_DTRACE:BOOL=OFF \
                        -DWITH_READLINE:BOOL=ON \
                        -DWITH_LIBEDIT:BOOL=OFF \
                        -DWITH_LIBWRAP:BOOL=ON \
                        -DWITH_SSL:STRING=system

    post-configure {
        reinplace "s|-lzlib|-lz|g" ${worksrcpath}/build_macports/storage/perfschema/unittest/CMakeFiles/pfs_connect_attr-t.dir/link.txt
    }

    post-build {
        set dirs ${worksrcpath}/build_macports
        foreach dir ${dirs} {
            reinplace -E {s|-arch [a-z0-9_]+||g} \
                ${dir}/scripts/mysql_config \
                ${dir}/scripts/mysqlbug
        }
    }

    post-destroot {
        # proc portdestroot::destroot_finish fails to find and compress our man pages
        # so borrow the compress command and run on our files now.
        set manpath "${destroot}${prefix}/share/man"
        set gzip [findBinary gzip ${portutil::autoconf::gzip_path}]
        foreach manpage [glob -type f ${destroot}${prefix}/share/man/${name_mysql}/man\[1-9\]/*] {
            # Fix paths in manpages
            reinplace "s|/etc/|${prefix}/etc/${name_mysql}/|g" ${manpage}
            # Compress all manpages with gzip
            system "$gzip -9vf ${manpage}"
        }
        foreach samp_conffile [glob -type f ${destroot}${prefix}/share/${name_mysql}/support-files/my-*.cnf] {
            # Fix paths in sample configuration files
            reinplace "s|/etc/my.cnf|${prefix}/etc/${name_mysql}/my.cnf|g" ${samp_conffile}
        }
        xinstall -m 755 -o root -d \
            ${destroot}${prefix}/etc/${name_mysql}
        copy ${worksrcpath}/build_macports/macports/macports-default.cnf \
            ${destroot}${prefix}/etc/${name_mysql}/
        xinstall -m 755 -o root -d \
            ${destroot}${prefix}/share/${name_mysql}/support-files/macports
        copy ${worksrcpath}/build_macports/macports/my.cnf \
            ${destroot}${prefix}/share/${name_mysql}/support-files/macports/
    }

    post-install {
        if {![file exists ${prefix}/etc/LaunchDaemons/org.macports.${name_mysql}/org.macports.${name_mysql}-server.plist]} {
            ui_msg "The ${name_mysql} client has been installed."
            ui_msg "To install the ${name_mysql} server, install the ${name_mysql}-server port."
        }
    }

    pre-activate {
        # The macports-default.cnf is installed by ${name_mysql}.
        # Early versions of ${name_mysql}-server installed macports-default.cnf so for a
        # reasonable period we need to deactivate older versions of the ${name_mysql}-server.
        if { [file exists ${prefix}/etc/${name_mysql}/macports-default.cnf]
            && ![catch {set vers [lindex [registry_active ${name_mysql}-server] 0]}]
            && [vercmp [lindex $vers 1] 5.5.25] < 0 } {

            registry_deactivate_composite ${name_mysql}-server "" [list ports_nodepcheck 1]
        }
    }

    post-activate {
        if {![file exists ${prefix}/etc/${name_mysql}/my.cnf]} {
            copy ${prefix}/share/${name_mysql}/support-files/macports/my.cnf \
                ${prefix}/etc/${name_mysql}/
        }
    }

    variant system_readline description {Use system readline instead of bundled readline} {
    
        # Add readline support.
        # "-DWITH_READLINE:BOOL=OFF" has the peculiar meaning "do not use the bundled copy
        # of readline but use the system's (i.e. MacPorts') copy of readline"
        depends_lib-append      port:readline
        configure.args-delete   -DWITH_READLINE:BOOL=ON
        configure.args-append   -DWITH_READLINE:BOOL=OFF
        archcheck.files-append  lib/libreadline.dylib
    }

    livecheck.type          regex
    livecheck.url           http://dev.mysql.com/
    livecheck.regex         "<a href=\"http://dev.mysql.com/downloads/mysql/\[^\"\]+\">(${version_branch}(\.\[0-9.\]+)?)\[^<\]*</a>"
}

subport ${name_mysql}-server {

    revision            ${revision_server}
    license             BSD
    description         Run ${name_mysql} as server
    long_description    ${description}

    supported_archs     noarch
    distfiles

    depends_run         port:${name_mysql}

    if {"darwin" == ${os.platform} && ${os.major} > 8} {
        set mysqluser       _mysql
    } else {
        set mysqluser       mysql
    }
    add_users ${mysqluser} group=${mysqluser} realname=MySQL\ Server

    startupitem.create      yes
    startupitem.executable  ${prefix}/lib/${name_mysql}/bin/mysqld --user=${mysqluser}

    use_configure       no

    build {}

    destroot {
        xinstall -m 755 -o root -d \
            ${destroot}${prefix}/var/run
        xinstall -m 755 -o ${mysqluser} -g ${mysqluser} -d \
            ${destroot}${prefix}/etc/${name_mysql} \
            ${destroot}${prefix}/var/db/${name_mysql} \
            ${destroot}${prefix}/var/log/${name_mysql} \
            ${destroot}${prefix}/var/run/${name_mysql}
        destroot.keepdirs-append  \
            ${destroot}${prefix}/var/db/${name_mysql} \
            ${destroot}${prefix}/var/log/${name_mysql} \
            ${destroot}${prefix}/var/run/${name_mysql}
    }

    notes "
If this is a new install you might want to run:

\$ sudo -u ${mysqluser} ${prefix}/lib/${name_mysql}/bin/mysql_install_db
"

    livecheck.type          none
}
